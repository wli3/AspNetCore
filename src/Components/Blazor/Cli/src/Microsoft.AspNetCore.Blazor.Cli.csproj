<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.0</TargetFramework>
    <OutputType>Exe</OutputType>
    <AssemblyName>dotnet-blazor</AssemblyName>
    <PackageId>Microsoft.AspNetCore.Blazor.Cli</PackageId>
    <IsShippingPackage>true</IsShippingPackage>
    <StartupObject>Microsoft.AspNetCore.Blazor.Cli.Program</StartupObject>
    <Description>Development server for use when building Blazor applications.</Description>
    <!-- Set this to false because assemblies should not reference this assembly directly, (except for tests, of course). -->
    <IsProjectReferenceProvider>false</IsProjectReferenceProvider>
    <NoWarn>$(NoWarn);NU5118</NoWarn>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="Microsoft.AspNetCore.Blazor.Server" />
    <Reference Include="Microsoft.AspNetCore.Components.Server" />
    <Reference Include="Microsoft.AspNetCore.ResponseCompression" />
    <Reference Include="Microsoft.AspNetCore" />
    <Reference Include="Microsoft.Extensions.CommandLineUtils.Sources" />
  </ItemGroup>

  <ItemGroup>
    <None Include="targets/*.props;targets/*.targets" Pack="true">
      <PackagePath>build/netstandard1.0/%(RecursiveDir)%(Filename)%(Extension)</PackagePath>
    </None>
  </ItemGroup>

  <!--
    Temporarily use hand-authored .nuspec file until we can use <FrameworkReference>
    The hand-authored .nuspec file is to ensure it *doesn't* reference the shared
    framework packages that aren't actually shipping as packages. We can remove this
    once the nuspec generation accounts for <FrameworkReference>.
  -->

  <Target Name="PrepareNuSpecProperties" BeforeTargets="_IntermediatePack">
    <!-- Also temporarily generate the runtimeconfig.json manually until we can use <FrameworkReference> -->
      <PropertyGroup>
      <NuspecProperties>
        sharedfxversion=$(SharedFxVersion);
      </NuspecProperties>
    </PropertyGroup>
    <Sdk_GenerateFileFromTemplate TemplateFile="temporaryruntimeconfig.json" Properties="$(NuspecProperties)" OutputPath="$(BaseIntermediateOutputPath)/out/dotnet-blazor.runtimeconfig.json">
    </Sdk_GenerateFileFromTemplate>
  </Target>

  <PropertyGroup>
    <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);Publish;PackPublish</TargetsForTfmSpecificContentInPackage>
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <SuppressDependenciesWhenPacking>true</SuppressDependenciesWhenPacking>
  </PropertyGroup>

  <Target Name="PackPublish" BeforeTargets="_IntermediatePack">
    <ItemGroup>
      <_GeneratedFiles Include="$(PublishDepsFilePath)"/>
      <_GeneratedFiles Include="$(BaseIntermediateOutputPath)/out/dotnet-blazor.runtimeconfig.json"/>
    </ItemGroup>

    <ItemGroup>
      <TfmSpecificPackageFile Include="@(_GeneratedFiles)">
        <PackagePath>tools/%(_GeneratedFiles.RecursiveDir)%(_GeneratedFiles.Filename)%(_GeneratedFiles.Extension)</PackagePath>
      </TfmSpecificPackageFile>

      <TfmSpecificPackageFile Include="@(ResolvedFileToPublish->'$([MSBuild]::NormalizeDirectory($(PublishDir)))%(RelativePath)')">
        <PackagePath>tools/%(ResolvedFileToPublish.RelativePath)</PackagePath>
      </TfmSpecificPackageFile>
    </ItemGroup>
  </Target>

</Project>


